#include "../Utils.hlsl"
#pragma kernel CSMain

RWTexture2D<float4> Result;
RWTexture2D<float4> Environment;
int seed;

bool isSolid(uint kind)
{
    return kind==WOOD
        ||kind==SAND
        ||kind==ICE
        ||kind==FIRE_SOURCE
        ||kind==FIRE
        ||kind==ROCK
        ||kind==MUD
        ||kind==WET_MUD
        ||kind==WET_SAND;
}

void updateAcid(uint3 id, uint2 nbrId)
{
    if(isSolid(float2int(Result[nbrId].x)))
    {
        setKind(id.xy,EMPTY);
        setKind(nbrId,EMPTY);
    }
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(checkKind(id.xy,ACID))
    {
        updateAcid(id,down(id));
        updateAcid(id,right(id));
        updateAcid(id,left(id));
    }
}

bool checkKind(uint2 id,uint kind)
{
    return float2int(Result[id.xy].x)==kind;
}

void move(uint2 id,uint2 nbrId)
{
    float4 temp=Result[id.xy];
    Result[id.xy]=Result[nbrId];
    Result[nbrId]=temp;
}

void setKind(uint2 id,uint kind)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(int2float(kind),ori.yzw);
}

void setY(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,int2float(value),ori.zw);
}

void setZ(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,int2float(value),ori.w);
}

void setW(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,ori.z,int2float(value));
}
