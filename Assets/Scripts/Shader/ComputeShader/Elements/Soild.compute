#include "../Utils.hlsl"
#pragma kernel CSMain

#define SOAKDISTANCE 10
RWTexture2D<float4> Result;
RWTexture2D<float4> Environment;
int seed;

//浸润
void soak(uint3 id,uint kind)
{
    uint2 vec=randDir(id,seed,DIR_UP);
    uint2 nbrId=id.xy+vec;
    if(checkKind(nbrId,WATER))
    {
        // y表示潮湿度
        setKind(id.xy,kind);
        setY(id.xy,SOAKDISTANCE);
    }
    else if(checkKind(nbrId,kind))
    {
        uint wet=Result[nbrId].y*ELEMENT_NUMBER;
        if(wet>0)
        {
            setKind(id.xy,kind);
            setY(id.xy,wet-1);
        }
    }
}

void dry(uint3 id,uint kind)
{
    uint temp=Environment[id.xy].y*ELEMENT_NUMBER;

    if(temp>25)
    {
        setKind(id.xy,kind);
    }
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(checkKind(id.xy,SAND))
        soak(id,WET_SAND);
    else if(checkKind(id.xy,MUD))
        soak(id,WET_MUD);
    else if(checkKind(id.xy,WET_SAND))
        soak(id,SAND);
    else if(checkKind(id.xy,WET_MUD))
        soak(id,MUD);
}


bool checkKind(uint2 id,uint kind)
{
    return float2int(Result[id.xy].x)==kind;
}

void move(uint2 id,uint2 nbrId)
{
    float4 temp=Result[id.xy];
    Result[id.xy]=Result[nbrId];
    Result[nbrId]=temp;
}

void setKind(uint2 id,uint kind)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(int2float(kind),ori.yzw);
}

void setY(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,int2float(value),ori.zw);
}

void setZ(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,int2float(value),ori.w);
}

void setW(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,ori.z,int2float(value));
}
