#include "Utils.hlsl"
#pragma kernel CSMain

RWTexture2D<float4> Result;
int seed;

uint fallPriority(uint2 id)
{
    uint kind=float2int(Result[id].x);
    switch (kind)
    {
    case SAND:return 25;
    case WATER:return 15;
    case OIL:return 14;
    case ACID:return 16;
    case MAGMA:return 19;
    case F_FIRE_SOURCE:return 10;
    case POISON_GAS:return 4;
    case STEAM:return 3;
    case GAS:return 1;
    case FIRE:return 1;
    case EMPTY:return 0;
    default:return 30;
    }
}

bool canFall(uint3 id)
{
    uint kind=float2int(Result[id.xy].x);
    return kind==SAND
    ||kind==WATER
    ||kind==OIL
    ||kind==F_FIRE_SOURCE
    ||kind==ACID
    ||kind==MAGMA
    ||kind==RUOSHUI;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(canFall(id)&&(fallPriority(id.xy))>fallPriority(down(id)))
    {
        move(id.xy,down(id));
    }
}

bool checkKind(uint2 id,uint kind)
{
    return float2int(Result[id.xy].x)==kind;
}

void move(uint2 id,uint2 nbrId)
{
    float temp=Result[id.xy].x;
    Result[id.xy]=float4(Result[nbrId].x,Result[id.xy].yzw);
    Result[nbrId]=float4(temp.x,Result[nbrId].yzw);
}

void setKind(uint2 id,uint kind)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(int2float(kind),ori.yzw);
}

void setY(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,int2float(value),ori.zw);
}

void setZ(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,int2float(value),ori.w);
}

void setW(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,ori.z,int2float(value));
}