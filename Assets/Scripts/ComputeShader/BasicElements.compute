#include "Utils.hlsl"
#pragma kernel CSMain

RWTexture2D<float4> Result;
int seed;

void updateSand(uint3 id);
void updateGas(uint3 id);
void updateWater(uint3 id);

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint kind=value2Kind(Result[id.xy]);
    switch (kind)
    {
    case ELE_SAND:  updateSand(id);  break;
    case ELE_GAS:   updateGas(id);   break;
    case ELE_WATER: updateWater(id); break;
    default: break;
    }
}

void updateSand(uint3 id)
{
    float4 ori=Result[id.xy];
    float4 nbr=Result[down(id)];
    //重力
    if(isEmpty(nbr))
    {
        Result[id.xy]=float4(nbr.x,ori.yzw);
        Result[down(id)]= float4(kind2Value(ELE_SAND),ori.yzw);
    }
    else if(isLiquid(nbr))
    {
        Result[id.xy]=float4(nbr.x,ori.yzw);
        Result[down(id)]=float4(kind2Value(ELE_SAND),nbr.yzw);
    }
}

void updateGas(uint3 id)
{
    //漂浮
    float4 ori=Result[id.xy];
    uint2 vec=randVector(id,seed);
    float4 nbr=Result[vec];
    if(canPass(nbr))
    {
        if(rand(id,seed)>0.01f)
        {
            Result[id.xy]=float4(nbr.x,ori.yzw);
        }
        Result[vec]=float4(kind2Value(ELE_GAS),nbr.yzw);
    }
}

void updateWater(uint3 id)
{
    float4 ori=Result[id.xy];
    float4 nbr=Result[down(id)];
    
    //重力
    if(isAir(nbr))
    {
        Result[id.xy]=float4(nbr.x,ori.yzw);
        Result[down(id)]=float4(kind2Value(ELE_WATER),nbr.yzw);
        return;
    }
    
    //流体
    if(isAir(Result[left(id)])&&isAir(Result[right(id)]))
        return;
    
    nbr=Result[left(id)];
    if(isAir(nbr))
    {
        if(rand(id,seed)>0.4f)
        {
            Result[id.xy]=float4(nbr.x,ori.yzw);
            Result[left(id)]=float4(kind2Value(ELE_WATER),nbr.yzw);
        }
        return;
    }
    nbr=Result[right(id)];
    if(isAir(nbr))
    {
        if(rand(id,seed)>0.4f)
        {
            Result[id.xy]=float4(nbr.x,ori.yzw);
            Result[right(id)]=float4(kind2Value(ELE_WATER),nbr.yzw);
        }        
        return;
    }
}