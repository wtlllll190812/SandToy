#include "Utils.hlsl"
#pragma kernel CSMain

RWTexture2D<float4> Result;
RWTexture2D<float4> Environment;
int seed;

void updateFire(uint3 id)
{
    setTemperature(id.xy,0.8f);
    uint2 vec=randDir(id,seed,DIR_UP);
    uint2 nbrId=id.xy+vec;
    uint number=Result[id.xy].y*ELEMENT_NUMBER;

    if(number==0)
    {
        setKind(id.xy,EMPTY);
    }
    
    if(canPass(Result[nbrId]))
    {
        move(id.xy,nbrId);
        setY(nbrId,rand(id,seed)>0.2f?number-1:number);
        setY(id.xy,0);
    }
}

//y表示剩余火星数量
void spawnFire(uint3 id)
{
    setTemperature(id.xy,0.9f);
    uint2 nbrId=id.xy+randDir(id,seed,DIR_UP);
    float4 nbr=Result[nbrId];
    if(isEmpty(nbr))
    {
        setKind(nbrId,FIRE);
        setY(nbrId,20);
        setY(id.xy,Result[id.xy].y*ELEMENT_NUMBER-1);
        if(Result[id.xy].y*ELEMENT_NUMBER<=0)
        {
            setKind(id.xy,EMPTY);
        }
    }
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(checkKind(id.xy,FIRE_SOURCE))
        spawnFire(id);
    else if(checkKind(id.xy,FIRE))
        updateFire(id);
}

void setTemperature(uint2 id,float value)
{
    float4 ori=Environment[id.xy];
    Environment[id.xy]=float4(value,ori.yzw);
}

bool checkKind(uint2 id,uint kind)
{
    return float2int(Result[id.xy].x)==kind;
}

void move(uint2 id,uint2 nbrId)
{
    float temp=Result[id.xy].x;
    Result[id.xy]=float4(Result[nbrId].x,Result[id.xy].yzw);
    Result[nbrId]=float4(temp.x,Result[nbrId].yzw);
}

void setKind(uint2 id,uint kind)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(int2float(kind),ori.yzw);
}

void setY(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,int2float(value),ori.zw);
}

void setZ(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,int2float(value),ori.w);
}

void setW(uint2 id,uint value)
{
    float4 ori=Result[id.xy];
    Result[id.xy]=float4(ori.x,ori.y,ori.z,int2float(value));
}